openapi: "3.0.0"
info:
  version: 1.0.0
  title: Couchbase Data API
paths:
  '/v1/buckets/{bucketName}/scopes/{scopeName}/collections/{collectionName}/documents/{documentKey}':
    parameters:
      - $ref: '#/components/parameters/AuthorizationHeader'
      - $ref: '#/components/parameters/BucketName'
      - $ref: '#/components/parameters/ScopeName'
      - $ref: '#/components/parameters/CollectionName'
      - $ref: '#/components/parameters/DocumentKey'
    get:
      operationId: getDocument
      tags:
        - Single Document Operations
      parameters:
        - $ref: '#/components/parameters/AcceptEncodingHeader'
        - in: query
          name: project
          description: Specific fields to project from the document.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful fetch of the document
          headers:
            Content-Encoding:
              $ref: "#/components/headers/ContentEncoding"
            ETag:
              $ref: "#/components/headers/ETag"
            Expires:
              $ref: "#/components/headers/Expires"
            X-CB-Flags:
              $ref: "#/components/headers/DocumentFlags"
          content:
            '*':
              schema:
                type: string
                format: binary
    post:
      operationId: createDocument
      tags:
        - Single Document Operations
      parameters:
        - $ref: '#/components/parameters/ContentEncodingHeader'
        - $ref: '#/components/parameters/ExpiresHeader'
        - $ref: '#/components/parameters/DocumentFlagsHeader'
        - $ref: '#/components/parameters/DurabilityLevelHeader'
      requestBody:
        required: true
        content:
         '*':
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful creation of the document
          headers:
            ETag:
              $ref: "#/components/headers/ETag"
            X-CB-MutationToken:
              $ref: "#/components/headers/MutationToken"
    put:
      operationId: updateDocument
      tags:
        - Single Document Operations
      parameters:
        - $ref: '#/components/parameters/ContentEncodingHeader'
        - $ref: '#/components/parameters/IfMatchHeader'
        - $ref: '#/components/parameters/ExpiresHeader'
        - $ref: '#/components/parameters/DocumentFlagsHeader'
        - $ref: '#/components/parameters/DurabilityLevelHeader'
      requestBody:
        required: true
        content:
          '*':
            schema: {}
      responses:
        '200':
          description: Successful creation of the document
          headers:
            ETag:
              $ref: "#/components/headers/ETag"
            X-CB-MutationToken:
              $ref: "#/components/headers/MutationToken"
    delete:
      operationId: deleteDocument
      tags:
        - Single Document Operations
      parameters:
        - $ref: '#/components/parameters/IfMatchHeader'
        - $ref: '#/components/parameters/DurabilityLevelHeader'
      responses:
        '200':
          description: Successful deletion of the document
          headers:
            ETag:
              $ref: "#/components/headers/ETag"
            X-CB-MutationToken:
              $ref: "#/components/headers/MutationToken"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    DocumentEncoding:
      title: DocumentEncoding
      description: DocumentEncoding specifies the compression used for the the document.
      type: string
      enum:
        - identity
        - snappy
      x-enum-varnames:
        - DocumentEncodingIdentity
        - DocumentEncodingSnappy
    DurabilityLevel:
      title: DurabilityLevel
      description: DurabilityLevel specifies the level of synchronous replication to use.
      type: string
      enum:
        - None
        - Majority
        - MajorityAndPersistOnMaster
        - PersitToMajority
      x-enum-varnames:
        - DurabilityLevelNone
        - DurabilityLevelMajority
        - DurabilityLevelMajorityAndPersistOnMaster
        - DurabilityLevelPersitToMajority
  parameters:
    AuthorizationHeader:
      in: header
      name: Authorization
      description: Header for authentication
      schema:
        type: string
      required: true
    AcceptEncodingHeader:
      in: header
      name: Accept-Encoding
      description: The encoding of the document
      schema:
        type: array
        items:
          $ref: '#/components/schemas/DocumentEncoding'
    ContentEncodingHeader:
      in: header
      name: Content-Encoding
      description: The encoding of the document
      schema:
        $ref: '#/components/schemas/DocumentEncoding'
    IfMatchHeader:
      in: header
      name: If-Match
      description: The CAS of the document to check before updating.
      schema:
        type: string
    ExpiresHeader:
      in: header
      name: Expires
      description: The expiry time of the document.
      schema:
        type: string
    DocumentFlagsHeader:
      in: header
      name: X-CB-Flags
      description: The Flags of the document.
      schema:
        type: integer
        format: uint32
    DurabilityLevelHeader:
      in: header
      name: X-CB-DurabilityLevel
      description: The level of durability required for this write operation.
      schema:
        $ref: '#/components/schemas/DurabilityLevel'
    BucketName:
      in: path
      name: bucketName
      description: name of the bucket containing the document
      schema:
        type: string
      required: true
    ScopeName:
      in: path
      name: scopeName
      description: name of the scope containing the document
      schema:
        type: string
      required: true
    CollectionName:
      in: path
      name: collectionName
      description: name of the collection containing the document
      schema:
        type: string
      required: true
    DocumentKey:
      in: path
      name: documentKey
      description: name of the document
      schema:
        type: string
      required: true
  headers:
    ContentEncoding:
      description: The encoding of the document
      schema:
        $ref: '#/components/schemas/DocumentEncoding'
    ETag:
      description: The CAS of the document.
      schema:
        type: string
    Expires:
      description: The expiry time of the document represented as an ISO8601 string.
      schema:
        type: string
    DocumentFlags:
      description: The Flags of the document.
      schema:
        type: integer
        format: uint32
    MutationToken:
      schema:
        type: string
      description: A token representing the mutation of the document.